// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// simulate_burnout_cpp
DataFrame simulate_burnout_cpp(int n_tasks, double p, int threshold, int days, int reps, double task_arrival_rate);
RcppExport SEXP _burnoutTools_simulate_burnout_cpp(SEXP n_tasksSEXP, SEXP pSEXP, SEXP thresholdSEXP, SEXP daysSEXP, SEXP repsSEXP, SEXP task_arrival_rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_tasks(n_tasksSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type days(daysSEXP);
    Rcpp::traits::input_parameter< int >::type reps(repsSEXP);
    Rcpp::traits::input_parameter< double >::type task_arrival_rate(task_arrival_rateSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_burnout_cpp(n_tasks, p, threshold, days, reps, task_arrival_rate));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_burnoutTools_simulate_burnout_cpp", (DL_FUNC) &_burnoutTools_simulate_burnout_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_burnoutTools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
